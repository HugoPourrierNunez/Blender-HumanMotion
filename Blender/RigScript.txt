import bpy

def createArmature(origin, coef):
    # Create armature and object
    #bpy.ops.object.mode_set(mode='OBJECT')
    
    amt = bpy.data.armatures.new('arm')
    rig = bpy.data.objects.new('rig', amt)
    rig.location = origin
    rig.show_x_ray = True
    amt.show_names = True
    # Link object to scene
    scn = bpy.context.scene
    scn.objects.link(rig)
    scn.objects.active = rig
    scn.update()
 
    # Create bones
    
    bpy.ops.object.editmode_toggle()
    
    spine1 = amt.edit_bones.new('spine1')
    spine1.head = (0,0,8*coef)
    spine1.tail = (0,0,10*coef)
    
    spine2 = amt.edit_bones.new('spine2')
    spine2.head = (0,0,10*coef)
    spine2.tail = (0,0,12*coef)
    spine2.use_connect = True
    spine2.parent = spine1
    
    spine3 = amt.edit_bones.new('spine3')
    spine3.head = (0,0,12*coef)
    spine3.tail = (0,0,14*coef)
    spine3.use_connect = True
    spine3.parent = spine2
    
    neck = amt.edit_bones.new('neck')
    neck.head = (0,0,14*coef)
    neck.tail = (0,0,15*coef)
    neck.use_connect = True
    neck.parent = spine3
    
    head = amt.edit_bones.new('head')
    head.head = (0,0,15*coef)
    head.tail = (0,0,17*coef)
    head.use_connect = True
    head.parent = neck
    
    leftArm = amt.edit_bones.new('leftArm')
    leftArm.head = (0,0,14*coef)
    leftArm.tail = (0,-3*coef,14*coef)
    leftArm.use_connect = True
    leftArm.parent = spine3
    
    leftForearm = amt.edit_bones.new('leftForearm')
    leftForearm.head = (0,-3*coef,14*coef)
    leftForearm.tail = (0,-6*coef,14*coef)
    leftForearm.use_connect = True
    leftForearm.parent = leftArm
    
    leftHand = amt.edit_bones.new('leftHand')
    leftHand.head = (0,-6*coef,14*coef)
    leftHand.tail = (0,-7*coef,14*coef)
    leftHand.use_connect = True
    leftHand.parent = leftForearm
    
    rightArm = amt.edit_bones.new('rightArm')
    rightArm.head = (0,0,14*coef)
    rightArm.tail = (0,3*coef,14*coef)
    rightArm.use_connect = True
    rightArm.parent = spine3
    
    rigthForearm = amt.edit_bones.new('rigthForearm')
    rigthForearm.head = (0,3*coef,14*coef)
    rigthForearm.tail = (0,6*coef,14*coef)
    rigthForearm.use_connect = True
    rigthForearm.parent = rightArm
    
    rightHand = amt.edit_bones.new('rightHand')
    rightHand.head = (0,6*coef,14*coef)
    rightHand.tail = (0,7*coef,14*coef)
    rightHand.use_connect = True
    rightHand.parent = rigthForearm
 
    leftThigh = amt.edit_bones.new('leftThigh')
    leftThigh.head = (0,-1.5*coef,8*coef)
    leftThigh.tail = (0,-1.5*coef,4*coef)
    leftThigh.parent = spine1
    
    leftLeg = amt.edit_bones.new('leftLeg')
    leftLeg.head = (0,-1.5*coef,4*coef)
    leftLeg.tail = (0,-1.5*coef,0)
    leftLeg.use_connect = True
    leftLeg.parent = leftThigh
    
    leftFeet = amt.edit_bones.new('leftFeet')
    leftFeet.head = (0,-1.5*coef,0)
    leftFeet.tail = (1*coef,-1.5*coef,0)
    leftFeet.use_connect = True
    leftFeet.parent = leftLeg
 
    rightThigh = amt.edit_bones.new('rightThigh')
    rightThigh.head = (0,1.5*coef,8*coef)
    rightThigh.tail = (0,1.5*coef,4*coef)
    rightThigh.parent = spine1
    
    rightLeg = amt.edit_bones.new('rightLeg')
    rightLeg.head = (0,1.5*coef,4*coef)
    rightLeg.tail = (0,1.5*coef,0*coef)
    rightLeg.use_connect = True
    rightLeg.parent = rightThigh
    
    rightFeet = amt.edit_bones.new('rightFeet')
    rightFeet.head = (0,1.5*coef,0)
    rightFeet.tail = (1*coef,1.5*coef,0)
    rightFeet.use_connect = True
    rightFeet.parent = rightLeg
 
 
    # Bone constraints. Armature must be in pose mode.
    bpy.ops.object.mode_set(mode='POSE')
    """
    # IK constraint Mid -> Tip
    pMid = rig.pose.bones['spine1']
    cns1 = pMid.constraints.new('IK')
    cns1.name = 'Ik'
    cns1.target = rig
    cns1.subtarget = 'spine2'
    cns1.chain_count = 1
 
    # StretchTo constraint Mid -> Tip with influence 0.5
    cns2 = pMid.constraints.new('STRETCH_TO')
    cns2.name = 'Stretchy'
    cns2.target = rig
    cns2.subtarget = 'Tip'
    cns2.influence = 0.5
    cns2.keep_axis = 'PLANE_X'
    cns2.volume = 'VOLUME_XZX'
 
    # Copy rotation constraints Base -> Tip
    pBase = rig.pose.bones['Base']
    cns3 = pBase.constraints.new('COPY_ROTATION')
    cns3.name = 'Copy_Rotation'
    cns3.target = rig
    cns3.subtarget = 'Tip'
    cns3.owner_space = 'WORLD'
    cns3.target_space = 'WORLD'"""
 
    bpy.ops.object.mode_set(mode='OBJECT')
    return rig

if __name__ == "__main__":
    createArmature((0,0,0), .1)